
Survey Simulator 2.0  Documentation

--------------------------------------------------------------------------------

This software is released under the terms of the European Union Public
Licence v1.1 (EUPL v.1.1). See files eupl1.1.-en_0_0.pdf (Preamble) and
eupl1.1.-licence-en_0.pdf (detailed description of the licence).

--------------------------------------------------------------------------------

  When using the Survey Simulator or the L7SyntheticModel-v09 orbital 
  distribution model, or the CFEPS detections, please reference the paper :

"The Canada-France Ecliptic Plane Surveyâ€”Full Data Release: 
 The Orbital Structure of the Kuiper Belt"
   Petit, J.-M., et al., AJ, Vol 142 ID 131 (2011)

  If you simulate the OSSOS sample or use its detections, cite
Bannister et al (2016) AJ, 152, 70
Bannister et al (2018) ApJS, 236, 18

  If you simulate the Hilat sample or use its detections, cite
Petit et al (2017), AJ, 153, 236
  
  If you simulate the MA sample or use its detections, cite
Alexandersen et al (2016), AJ, 152, 111

--------------------------------------------------------------------------------

OVERVIEW

This package provides programmes and data aiming at simulating large-scale,
well-calibrated KBO surveys like CFEPS and OSSOS. The ultimate goal is to 
compare:
A.  a cosmogonic model of the orbital and size distribution 
    of the outer Solar System 
 to 
B. reality 
by quantitatively comparing the real objects that were actually found to what 
the surveys should have found IF the model was a good representation of 
the real world.  The Survey Simulator itself provides the first step by
'biasing' a model of the Kuiper Belt in the same way that the calibrated
observations did.

To do so, one uses a very precise description of what the surveys did: known
dates and pointing locations of the discovery observations along with an
accurate estimate of the detection efficiency as a function of apparent
magnitude in the filter of the survey and an object's rate of motion on the
sky at the time of each potentail observation.

In overview, what the OSSOS survey simulator does is draw objects from a model
and then decide if each fictional object would have been detected by the
survey(s) defined in the simulator; in other words, is the fictional object
inside one of the imaged fields, bright enough, and within the detectable range
of rates-of-motion on the sky? This yields what are called "simulated
detections", some large fraction of which are tracked to high-precision orbits.
It is then up to the user to compare the simulated tracked detections to the
real detections via some statistical method (the above paper outlines how the
CFEPS Team did this); this last step is not part of the simulator itself,
leaving people to decide on their own statistical approach.

Note that the 'real CFEPS and OSSOS' detections are not even required to 
RUN the Survey Simulator.  The true detections from the survey do not 
influence the output of the Survey Simulator at all, they are used only
after execution of the Survey Simulation, to determine if there is a 
mismatch between the "orbital and H-mag distribution of the predicted 
simulated detection, given the model" and "the real detections".

--------------------------------------------------------------------------------

The SurveySimulator-2.0 release consists of a driver program, subroutines that
define trans-neptunian or other outer Solar System objects (either from a 
parametric model or a lookup table), data that describe the CFEPS+OSSOS survey 
characterizations, and a list of the real classified objects discovered during 
the CFEPS project (to be compared to the output of the Survey Simulator).

A pictorial guide of this release and the main README files available is:

release --- README.first (this file)
 \      \-- README.contact 
  \
   \---- src ------------ README.src
   |         \----------- README.surveysubs
   |
   |---- CFEPS ---------- README.cfeps
   |
   |---- OSSOS ---------- README.OSSOS
   |
   |---- All_r_Surveys -- README.allrsurveys
   |
   |---- All_Surveys ---- README.allsurveys
   |
   |---- lookup --------- README.lookup
   |      \
   |       \------- example
   |
   |---- parametric ----- README.parametric
   |       \
   |        \------ example
   |
   \---- Python --------- README.python
		
--------------------------------------------------------------------------------

DESCRIPTION OF THE EIGHT MAIN SUB-DIRECTORIES

src
  This directory contains the common source codes for the survey simulator
  along with a compilation script and README files.  This portion of the
  source code will generally need little (if any) modification; instead
  a user will modify the important "GiMeObj" routine which provides 
  fictional objects to the Survey Simulator (see below).

---------

cfeps
  This directory contains the pointing history and efficiency functions for 
  each cfeps block, including the cfeps presurvey 'block'; it also contains 
  the list of real detected objects (cfeps.detections).  Other calibrated 
  surveys could be substituted (or added) once their characterization is 
  specified in the correct format.

---------

OSSOS
  This directory contains the pointing history and efficiency functions for
  each OSSOS block; it also contains the list of real detected objects
  including their dynamical class. 

---------

All_Surveys
   This is essentially the union of all surveys: CFEPS, HiLat, Alexandersen and
   OSSOS, but SEE IMPORTANT INFORMATION in that subdir's README.allsurveys file
   about how care must be taking when combining the surveys.

---------

All_r_Surveys
   This is similar to the above, restricted to objects detected with the
   MegaPrime r filter (OSSOS, Alexandersen, HiLat and L3h block from CFEPS).

---------

lookup
  This directory contains the source code for a "GiMeObj" routine that reads 
  an (orbital+size+colour+lightcurve) model from a file (lookup table), along 
  with a Makefile to generate the executable.
  There is an example subdirectory, which uses the L7model-3.0-9.0 file (the 
  CFEPS L7 model of the debiased Kuiper Belt) as an example input file for 
  the survey simulator.

---------

parametric
  This directory contains the source code for a GiMeObj routine that generates
  objects according to some parametric presciption, along with a Makefile to
  generate the executable and an example subdirectory.

---------

Python
  This directory contains the source code for a GiMeObj routine that generates
  objects according to some parametric presciption, along with a Makefile to
  generate the executable. This example uses the Driver.py Python program as
  driver instead of the usual Fortran program Driver.f.

--------------------------------------------------------------------------------

The first-time user should now look at 
src/README.src
to understand how the Survey Simulator is structured.

